const fs = require('fs');
const path = require('path');

// ◊§◊ï◊†◊ß◊¶◊ô◊î ◊ú◊ô◊¶◊ô◊®◊™ ◊ß◊ï◊ë◊• Word ◊û◊ï◊©◊ú◊ù ◊¢◊ù ◊§◊ô◊°◊ï◊ß ◊¶◊û◊ï◊ì
async function createPerfectWordDocument() {
  try {
    console.log('üìÑ Creating perfect Word document with proper punctuation spacing...');

    // ◊ô◊¶◊ô◊®◊™ ◊°◊ß◊®◊ô◊§◊ò Python ◊û◊™◊ï◊ß◊ü
    const pythonScript = `# -*- coding: utf-8 -*-
import sys
import os
from docx import Document
from docx.shared import Inches, Pt
from docx.enum.text import WD_ALIGN_PARAGRAPH

def create_word_doc():
    try:
        # Create new document
        doc = Document()

        # Add title
        title_paragraph = doc.add_paragraph()
        title_run = title_paragraph.add_run('◊ì◊ï◊í◊û◊î ◊ú◊ò◊ß◊°◊ò ◊¢◊ë◊®◊ô ◊¢◊ù ◊§◊ô◊°◊ï◊ß ◊û◊ï◊©◊ú◊ù')
        title_run.font.name = 'David'
        title_run.font.size = Pt(18)
        title_run.bold = True
        title_paragraph.alignment = WD_ALIGN_PARAGRAPH.RIGHT

        # Sample text paragraphs - WITHOUT "◊§◊°◊ß◊î X:" prefix
        paragraphs_text = [
            '◊©◊ú◊ï◊ù ◊ï◊ë◊®◊õ◊î! ◊î◊ô◊ï◊ù ◊ê◊†◊ô ◊®◊ï◊¶◊î ◊ú◊ì◊ë◊® ◊¢◊ú ◊†◊ï◊©◊ê ◊ó◊©◊ï◊ë ◊û◊ê◊ï◊ì ◊©◊û◊¢◊°◊ô◊ß ◊ê◊ï◊™◊ô ◊õ◊ë◊® ◊ñ◊û◊ü ◊®◊ë. ◊ê◊†◊ô ◊ó◊ï◊©◊ë ◊©◊ñ◊î ◊û◊©◊î◊ï ◊©◊õ◊ï◊ú◊†◊ï ◊¶◊®◊ô◊õ◊ô◊ù ◊ú◊ó◊©◊ï◊ë ◊¢◊ú◊ô◊ï ◊ï◊ú◊î◊™◊ô◊ô◊ó◊° ◊ê◊ú◊ô◊ï ◊ë◊®◊¶◊ô◊†◊ï◊™. ◊ñ◊î ◊ú◊ê ◊û◊©◊î◊ï ◊©◊ê◊§◊©◊® ◊§◊©◊ï◊ò ◊ú◊î◊™◊¢◊ú◊ù ◊û◊û◊†◊ï ◊ê◊ï ◊ú◊ì◊ó◊ï◊™ ◊ú◊ñ◊û◊ü ◊ê◊ó◊®. ◊î◊ê◊ù ◊ê◊†◊ó◊†◊ï ◊ë◊ê◊û◊™ ◊û◊ï◊õ◊†◊ô◊ù ◊ú◊î◊™◊û◊ï◊ì◊ì ◊¢◊ù ◊ñ◊î? ◊ê◊†◊ô ◊û◊ê◊û◊ô◊ü ◊©◊õ◊ü, ◊ê◊ë◊ú ◊ñ◊î ◊ì◊ï◊®◊© ◊û◊ê◊û◊• ◊®◊ë.',
            '◊ë◊¢◊¶◊ù, ◊õ◊©◊ê◊†◊ô ◊û◊°◊™◊õ◊ú ◊¢◊ú ◊î◊û◊¶◊ë ◊î◊†◊ï◊õ◊ó◊ô, ◊ê◊†◊ô ◊®◊ï◊ê◊î ◊©◊ô◊© ◊õ◊ê◊ü ◊î◊ñ◊ì◊û◊†◊ï◊™ ◊ê◊û◊ô◊™◊ô◊™ ◊ú◊¢◊©◊ï◊™ ◊©◊ô◊†◊ï◊ô ◊û◊©◊û◊¢◊ï◊™◊ô. "◊ñ◊ï ◊î◊ñ◊ì◊û◊†◊ï◊™ ◊ñ◊î◊ë", ◊õ◊§◊ô ◊©◊ê◊û◊® ◊ó◊ë◊®◊ô ◊ê◊™◊û◊ï◊ú. ◊ú◊ê ◊û◊ì◊ï◊ë◊® ◊ë◊ì◊ë◊® ◊ß◊ò◊ü ◊ê◊ï ◊©◊ï◊ú◊ô, ◊ê◊ú◊ê ◊ë◊ê◊û◊™ ◊ë◊û◊©◊î◊ï ◊©◊ô◊õ◊ï◊ú ◊ú◊î◊©◊§◊ô◊¢ ◊¢◊ú ◊õ◊ï◊ú◊†◊ï ◊ë◊ò◊ï◊ï◊ó ◊î◊ê◊®◊ï◊ö. ◊ô◊© ◊õ◊ê◊ü ◊§◊ï◊ò◊†◊¶◊ô◊ê◊ú ◊¢◊¶◊ï◊ù ◊ú◊¢◊©◊ï◊™ ◊ì◊ë◊®◊ô◊ù ◊©◊ï◊†◊ô◊ù, ◊ú◊ó◊©◊ï◊ë ◊û◊ó◊ï◊• ◊ú◊ß◊ï◊§◊°◊î, ◊ï◊ú◊û◊¶◊ï◊ê ◊§◊™◊®◊ï◊†◊ï◊™ ◊ô◊¶◊ô◊®◊™◊ô◊ô◊ù ◊ú◊ë◊¢◊ô◊ï◊™ ◊©◊†◊®◊ê◊ï◊™ ◊ë◊ú◊™◊ô ◊§◊™◊ô◊®◊ï◊™.',
            '◊ê◊†◊ô ◊ñ◊ï◊õ◊® ◊©◊§◊¢◊ù, ◊ú◊§◊†◊ô ◊õ◊û◊î ◊©◊†◊ô◊ù, ◊î◊ô◊™◊î ◊ú◊ô ◊ó◊ï◊ï◊ô◊î ◊û◊ê◊ï◊ì ◊û◊¢◊†◊ô◊ô◊†◊™ ◊©◊û◊ú◊û◊ì◊™ ◊ë◊ì◊ô◊ï◊ß ◊¢◊ú ◊î◊†◊ï◊©◊ê ◊î◊ñ◊î. ◊î◊ô◊ô◊™◊ô ◊ë◊û◊ß◊ï◊ù ◊û◊°◊ï◊ô◊ù, ◊§◊í◊©◊™◊ô ◊ê◊†◊©◊ô◊ù ◊û◊°◊ï◊ô◊û◊ô◊ù, ◊ï◊§◊™◊ê◊ï◊ù ◊î◊ë◊†◊™◊ô ◊û◊©◊î◊ï ◊©◊ú◊ê ◊î◊ë◊†◊™◊ô ◊ß◊ï◊ì◊ù. ◊ñ◊î ◊î◊ô◊î ◊õ◊û◊ï ◊î◊ê◊®◊î! ◊®◊í◊¢ ◊©◊ú ◊ë◊î◊ô◊®◊ï◊™ ◊û◊ï◊ó◊ú◊ò◊™ ◊©◊ë◊ï ◊î◊õ◊ú ◊î◊°◊™◊ì◊® ◊ë◊û◊ß◊ï◊ù. "◊¢◊õ◊©◊ô◊ï ◊ê◊†◊ô ◊û◊ë◊ô◊ü", ◊ê◊û◊®◊™◊ô ◊ú◊¢◊¶◊û◊ô ◊ë◊ê◊ï◊™◊ï ◊®◊í◊¢ ◊û◊õ◊ï◊†◊ü.',
            '◊î◊©◊ê◊ú◊î ◊î◊ó◊©◊ï◊ë◊î ◊î◊ô◊ê: ◊û◊î ◊ê◊†◊ó◊†◊ï ◊¢◊ï◊©◊ô◊ù ◊¢◊ù ◊î◊î◊ë◊†◊î ◊î◊ñ◊ï? ◊ê◊ô◊ö ◊ê◊†◊ó◊†◊ï ◊û◊™◊®◊í◊û◊ô◊ù ◊ê◊™ ◊ñ◊î ◊ú◊§◊¢◊ï◊ú◊î ◊ß◊ï◊†◊ß◊®◊ò◊ô◊™? ◊õ◊ô ◊ë◊°◊ï◊£, ◊î◊®◊¢◊ô◊ï◊†◊ï◊™ ◊î◊õ◊ô ◊ô◊§◊ô◊ù ◊ú◊ê ◊©◊ï◊ï◊ô◊ù ◊õ◊ú◊ï◊ù ◊ê◊ù ◊ê◊†◊ó◊†◊ï ◊ú◊ê ◊û◊ë◊ô◊ê◊ô◊ù ◊ê◊ï◊™◊ù ◊ú◊ë◊ô◊¶◊ï◊¢. ◊¶◊®◊ô◊ö ◊ú◊î◊ô◊ï◊™ ◊™◊ï◊õ◊†◊ô◊™, ◊¶◊®◊ô◊ö ◊ú◊î◊ô◊ï◊™ ◊û◊°◊í◊®◊™, ◊ï◊¶◊®◊ô◊ö ◊ú◊î◊ô◊ï◊™ ◊û◊ô◊©◊î◊ï ◊©◊ê◊ó◊®◊ê◊ô ◊¢◊ú ◊î◊î◊ï◊¶◊ê◊î ◊ú◊§◊ï◊¢◊ú. ◊ë◊ú◊ô ◊ñ◊î, ◊î◊õ◊ú ◊†◊©◊ê◊® ◊ë◊®◊û◊î ◊î◊™◊ô◊ê◊ï◊®◊ò◊ô◊™, ◊ï◊ë◊°◊ï◊£ ◊ú◊ê ◊ß◊ï◊®◊î ◊õ◊ú◊ï◊ù!'
        ]

        # Add paragraphs - clean text without "◊§◊°◊ß◊î X:" prefix
        for para_text in paragraphs_text:
            paragraph = doc.add_paragraph()
            run = paragraph.add_run(para_text)
            run.font.name = 'David'
            run.font.size = Pt(12)
            paragraph.alignment = WD_ALIGN_PARAGRAPH.RIGHT

        # Save document
        doc.save('perfect-word-output.docx')
        print('SUCCESS: Perfect Word document created')
        return True

    except Exception as e:
        print(f'ERROR: {str(e)}')
        return False

if __name__ == '__main__':
    create_word_doc()
`;

    // ◊õ◊™◊ô◊ë◊™ ◊î◊°◊ß◊®◊ô◊§◊ò ◊ú◊ß◊ï◊ë◊•
    const pythonFile = path.join(__dirname, 'create_perfect_word.py');
    fs.writeFileSync(pythonFile, pythonScript, 'utf8');

    // ◊î◊®◊¶◊™ ◊î◊°◊ß◊®◊ô◊§◊ò
    const { spawn } = require('child_process');

    return new Promise((resolve) => {
      const python = spawn('python', [pythonFile], {
        cwd: __dirname,
        stdio: ['pipe', 'pipe', 'pipe']
      });

      let output = '';
      let error = '';

      python.stdout.on('data', (data) => {
        output += data.toString();
      });

      python.stderr.on('data', (data) => {
        error += data.toString();
      });

      python.on('close', (code) => {
        // ◊†◊ô◊ß◊ï◊ô ◊ß◊ï◊ë◊• ◊ñ◊û◊†◊ô
        if (fs.existsSync(pythonFile)) {
          fs.unlinkSync(pythonFile);
        }

        if (code === 0 && output.includes('SUCCESS')) {
          console.log('‚úÖ Perfect Word document created successfully!');
          console.log('üìÅ File: perfect-word-output.docx');
          console.log('üîç This document should show:');
          console.log('   ‚úÖ 4 paragraphs as AI created them (NO "◊§◊°◊ß◊î X:" prefix)');
          console.log('   ‚úÖ Right-to-left alignment');
          console.log('   ‚úÖ Proper Hebrew font (David)');
          console.log('   ‚úÖ Punctuation marks properly attached to words');
          console.log('   ‚úÖ Quotes: "◊ñ◊ï ◊î◊ñ◊ì◊û◊†◊ï◊™ ◊ñ◊î◊ë" and "◊¢◊õ◊©◊ô◊ï ◊ê◊†◊ô ◊û◊ë◊ô◊ü"');
          console.log('   ‚úÖ Question marks: ◊î◊ê◊ù ◊ê◊†◊ó◊†◊ï ◊ë◊ê◊û◊™ ◊û◊ï◊õ◊†◊ô◊ù? and ◊û◊î ◊ê◊†◊ó◊†◊ï ◊¢◊ï◊©◊ô◊ù?');
          console.log('   ‚úÖ Exclamation marks: ◊©◊ú◊ï◊ù ◊ï◊ë◊®◊õ◊î! and ◊ñ◊î ◊î◊ô◊î ◊õ◊û◊ï ◊î◊ê◊®◊î!');
          console.log('   ‚úÖ Colons: ◊î◊©◊ê◊ú◊î ◊î◊ó◊©◊ï◊ë◊î ◊î◊ô◊ê:');
          resolve(true);
        } else {
          console.log('‚ùå Python script failed');
          console.log('Output:', output);
          console.log('Error:', error);
          resolve(false);
        }
      });

      python.on('error', (err) => {
        console.log('‚ùå Python execution failed:', err.message);
        resolve(false);
      });
    });

  } catch (error) {
    console.error('‚ùå Error creating perfect Word document:', error);
    return false;
  }
}

if (require.main === module) {
  createPerfectWordDocument();
}

module.exports = { createPerfectWordDocument };